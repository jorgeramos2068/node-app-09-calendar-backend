{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFAB.js","components/ui/DeleteEventFAB.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","uiOpenModal","uiCloseModal","eventSetActive","eventLogout","eventStartAddNew","eventAddNew","eventClearActive","eventUpdate","eventDelete","eventLoadAll","authChecking","authStartLogin","authLogin","authStartRegister","authStartRenewToken","authLogout","initialState","checking","authReducer","state","action","type","payload","events","activeEvent","calendarReducer","map","event","id","filter","modalOpen","uiReducer","rootReducer","combineReducers","auth","calendar","ui","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","baseURL","process","noTokenFetch","endpoint","data","method","url","fetch","headers","body","JSON","stringify","tokenFetch","token","localStorage","getItem","prepareEvents","start","moment","toDate","end","login","user","finishChecking","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","loginFormValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPassword2","registerFormValues","handleRegisterInputChange","validateLoginForm","trim","validateRegisterForm","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","later","clone","initialEvent","notes","CalendarModal","startDate","setStartDate","endDate","setEndDate","isValidTitle","setIsValidTitle","formValues","setFormValues","useEffect","closeModal","isValidForm","momentStart","momentEnd","isSameOrAfter","length","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","console","log","getState","_id","minDate","autoComplete","rows","AddNewFAB","DeleteEventFAB","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb5a0839.chunk.js","sourcesContent":["const types = {\n  uiOpenModal: '[ui] Open modal',\n  uiCloseModal: '[ui] Close modal',\n\n  eventSetActive: '[event] Set active',\n  eventLogout: '[event] Logout',\n  eventStartAddNew: '[event] Start add new',\n  eventAddNew: '[event] Add new',\n  eventClearActive: '[event] Clear active',\n  eventUpdate: '[event] Update event',\n  eventDelete: '[event] Delete event',\n  eventLoadAll: '[event] Load all',\n\n  authChecking: '[auth] Checking login state',\n  authStartLogin: '[auth] Start login',\n  authLogin: '[auth] Login',\n  authStartRegister: '[auth] Start register',\n  authStartRenewToken: '[auth] Start renew token',\n  authLogout: '[auth] Logout'\n};\n\nexport default types;\n","import types from '../types/types';\n\nconst initialState = {\n  checking: true,\n  // uid: null,\n  // name: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.authLogin:\n      return {\n        ...state,\n        ...action.payload,\n        checking: false\n      }\n    case types.authChecking:\n      return {\n        ...state,\n        checking: false\n      }\n    case types.authLogout:\n      return {\n        checking: false\n      }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import types from '../types/types';\n\nconst initialState = {\n  events: [],\n  activeEvent: null\n};\n\n// Event reference:\n// {\n//   id: new Date().getTime(),\n//   title: 'My Birthday',\n//   start: moment().toDate(),\n//   end: moment().add(2, 'hours').toDate(),\n//   notes: 'My notes',\n//   user: {\n//     uid: '123',\n//     name: 'Clark Kent'\n//   }\n// }\n\nconst calendarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.eventSetActive:\n      return {\n        ...state,\n        activeEvent: action.payload\n      };\n    case types.eventAddNew:\n      return {\n        ...state,\n        events: [...state.events, action.payload]\n      };\n    case types.eventLoadAll:\n      return {\n        ...state,\n        events: [...action.payload]\n      };\n    case types.eventClearActive:\n      return {\n        ...state,\n        activeEvent: null\n      };\n    case types.eventUpdate:\n      return {\n        ...state,\n        events: state.events.map(event => {\n          return (event.id === action.payload.id) ? action.payload : event\n        })\n      };\n    case types.eventDelete:\n      return {\n        ...state,\n        events: state.events.filter(event => {\n          return (event.id !== state.activeEvent.id)\n        }),\n        activeEvent: null\n      };\n    case types.eventLogout:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nexport default calendarReducer;\n","import types from '../types/types';\n\nconst initialState = {\n  modalOpen: false,\n};\n\nconst uiReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.uiOpenModal:\n      return {\n        ...state,\n        modalOpen: true\n      };\n    case types.uiCloseModal:\n      return {\n        ...state,\n        modalOpen: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default uiReducer;\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\nimport calendarReducer from './calendarReducer';\nimport uiReducer from './uiReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  calendar: calendarReducer,\n  ui: uiReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancers =\n  (\n    process.env.NODE_ENV !== 'production'\n    && typeof window !== 'undefined'\n    && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  )\n  || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;\n","const baseURL = process.env.REACT_APP_API_URL\n\nexport const noTokenFetch = (endpoint, data, method = 'GET') => {\n  const url = `${baseURL}/${endpoint}`;\n  if (method === 'GET') {\n    return fetch(url);\n  }\n  else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n};\n\nexport const tokenFetch = (endpoint, data, method = 'GET') => {\n  const url = `${baseURL}/${endpoint}`;\n  const token = localStorage.getItem('token') || '';\n  if (method === 'GET') {\n    return fetch(url, {\n      method,\n      headers: {\n        'x-token': token\n      }\n    });\n  }\n  else {\n    return fetch(url, {\n      method,\n      headers: {\n        'Content-type': 'application/json',\n        'x-token': token\n      },\n      body: JSON.stringify(data)\n    });\n  }\n};\n","import moment from 'moment';\n\nconst prepareEvents = (events = []) => {\n  return events.map(event => ({\n    ...event,\n    start: moment(event.start).toDate(),\n    end: moment(event.end).toDate(),\n  }));\n};\n\nexport { prepareEvents };\n","import Swal from 'sweetalert2';\nimport types from '../types/types';\nimport { tokenFetch } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\nexport const eventStartAddNew = (event) => {\n  return async (dispatch, getState) => {\n    const {uid, name} = getState().auth;\n    try {\n      const endpoint = 'events'\n      const resp = await tokenFetch(endpoint, event, 'POST');\n      const body = await resp.json();\n      if (body.ok) {\n        event.id = body.event.id;\n        event.user = {\n          _id: uid,\n          name: name\n        };\n        dispatch(eventAddNew(event));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\nexport const eventAddNew = (event) => ({\n  type: types.eventAddNew,\n  payload: event\n});\n\nexport const eventStartLoadAll = () => {\n  return async (dispatch) => {\n    try {\n      const endpoint = 'events';\n      const resp = await tokenFetch(endpoint);\n      const body = await resp.json();\n      if (body.ok) {\n        const events = prepareEvents(body.events);\n        dispatch(eventLoadAll(events));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const eventLoadAll = (events) => ({\n  type: types.eventLoadAll,\n  payload: events\n});\n\nexport const eventSetActive = (event) => ({\n  type: types.eventSetActive,\n  payload: event\n});\n\nexport const eventClearActive = () => ({\n  type: types.eventClearActive\n});\n\nexport const eventStartUpdate = (event) => {\n  return async (dispatch) => {\n    try {\n      const endpoint = `events/${event.id}`;\n      const resp = await tokenFetch(endpoint, event, 'PUT');\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(eventUpdate(event));\n      }\n      else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const eventUpdate = (event) => ({\n  type: types.eventUpdate,\n  payload: event\n});\n\nexport const eventStartDelete = () => {\n  return async (dispatch, getState) => {\n    const {id} = getState().calendar.activeEvent;\n    try {\n      const endpoint = `events/${id}`;\n      const resp = await tokenFetch(endpoint, {}, 'DELETE');\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(eventDelete());\n      }\n      else {\n        Swal.fire('Error', body.msg, 'error');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const eventDelete = () => ({\n  type: types.eventDelete\n});\n\nexport const eventLogout = () => ({\n  type: types.eventLogout\n});\n","import Swal from 'sweetalert2';\nimport { noTokenFetch, tokenFetch } from \"../helpers/fetch\";\nimport types from \"../types/types\";\nimport { eventLogout } from './events';\n\nexport const startLogin = (email, password) => {\n  return async (dispatch) => {\n    const endpoint = 'auth';\n    const data = {\n      email,\n      password\n    };\n    const resp = await noTokenFetch(endpoint, data, 'POST');\n    const body = await resp.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      const user = {\n        uid: body.uid,\n        name: body.name\n      }\n      dispatch(login(user));\n    }\n    else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const login = (user) => ({\n  type: types.authLogin,\n  payload: user\n});\n\nexport const startRegister = (email, password, name) => {\n  return async (dispatch) => {\n    const endpoint = 'auth/new';\n    const data = {\n      email,\n      password,\n      name\n    };\n    const resp = await noTokenFetch(endpoint, data, 'POST');\n    const body = await resp.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      const user = {\n        uid: body.uid,\n        name: body.name\n      }\n      dispatch(login(user));\n    }\n    else {\n      Swal.fire('Error', body.msg, 'error');\n    }\n  };\n};\n\nexport const startChecking = () => {\n  return async (dispatch) => {\n    const endpoint = 'auth/renew';\n    const resp = await tokenFetch(endpoint, {}, 'GET');\n    const body = await resp.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      const user = {\n        uid: body.uid,\n        name: body.name\n      }\n      dispatch(login(user));\n    }\n    else {\n      dispatch(finishChecking());\n    }\n  };\n};\n\nexport const finishChecking = () => ({\n  type: types.authChecking\n});\n\nexport const startLogout = () => {\n  return (dispatch) => {\n    localStorage.clear();\n    dispatch(eventLogout());\n    dispatch(logout());\n  };\n};\n\nexport const logout = () => ({\n  type: types.authLogout\n});\n","import {useState} from 'react';\n\nconst useForm = ( initialState = {} ) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = (newFormState = initialState) => {\n    setValues(newFormState);\n  }\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [ target.name ]: target.value\n    });\n  }\n\n  return [values, handleInputChange, reset];\n}\n\nexport default useForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport useForm from '../../hooks/useForm';\nimport './login.css';\n\nconst LoginScreen = () => {\n  const dispatch = useDispatch();\n  const initialLoginForm = {\n    loginEmail: '',\n    loginPassword: ''\n  };\n  const [loginFormValues, handleLoginInputChange] = useForm(initialLoginForm);\n  const {loginEmail, loginPassword} = loginFormValues;\n\n  const initialRegisterForm = {\n    registerName: '',\n    registerEmail: '',\n    registerPassword: '',\n    registerPassword2: ''\n  };\n  const [registerFormValues, handleRegisterInputChange] = useForm(initialRegisterForm);\n  const {\n    registerName,\n    registerEmail,\n    registerPassword,\n    registerPassword2\n  } = registerFormValues;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    if (validateLoginForm()) {\n      dispatch(startLogin(loginEmail, loginPassword));\n    }\n    else {\n      Swal.fire('Error', 'All fields are mandatory to login', 'error');\n    }\n  };\n\n  const validateLoginForm = () => {\n    if (loginEmail.trim() === '' || loginPassword.trim() === '') {\n      return false;\n    }\n    return true;\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    if (validateRegisterForm()) {\n      dispatch(startRegister(registerEmail, registerPassword, registerName));\n    }\n    else {\n      Swal.fire('Error', 'All fields are mandatory to register and passwords must match', 'error');\n    }\n  };\n\n  const validateRegisterForm = () => {\n    if (registerName.trim() === '' || registerEmail.trim() === '' || registerPassword.trim() === '') {\n      return false;\n    }\n    else if (registerPassword.trim() !== registerPassword2.trim()) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <div className=\"container login-container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 login-form-1\">\n          <h3>Login</h3>\n          <form onSubmit={handleLogin}>\n            <div className=\"form-group\">\n              <input \n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                name=\"loginEmail\"\n                value={loginEmail}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                name=\"loginPassword\"\n                value={loginPassword}\n                onChange={handleLoginInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input \n                type=\"submit\"\n                className=\"btnSubmit\"\n                value=\"Login\" \n              />\n            </div>\n          </form>\n        </div>\n\n        <div className=\"col-md-6 login-form-2\">\n          <h3>Register</h3>\n          <form onSubmit={handleRegister}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Name\"\n                name=\"registerName\"\n                value={registerName}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Email\"\n                name=\"registerEmail\"\n                value={registerEmail}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Password\"\n                name=\"registerPassword\"\n                value={registerPassword}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Retype your password\" \n                name=\"registerPassword2\"\n                value={registerPassword2}\n                onChange={handleRegisterInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input \n                type=\"submit\" \n                className=\"btnSubmit\" \n                value=\"Create account\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n  const {name} = useSelector(state => state.auth);\n\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n\n  return (\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\n      <span className=\"navbar-brand\">{name}</span>\n      <button\n        className=\"btn btn-outline-danger\"\n        onClick={handleLogout}\n      >\n        <i className=\"fas fa-sign-out-alt\"></i>\n        <span> Logout</span>\n      </button>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst CalendarEvent = ({event}) => {\n  const {title, user} = event;\n\n  return (\n    <div>\n      <strong>{title}</strong>\n      <span>-{user.name}</span>\n    </div>\n  );\n};\n\nexport default CalendarEvent;\n","import types from '../types/types';\n\nexport const uiOpenModal = () => ({\n  type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n  type: types.uiCloseModal\n});\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from 'react-modal';\nimport moment from 'moment';\nimport DateTimePicket from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n  content : {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\nModal.setAppElement('#root');\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\nconst later = now.clone().add(1, 'hours');\nconst initialEvent = {\n  title: '',\n  notes: '',\n  start: now.toDate(),\n  end: later.toDate()\n}\n\nconst CalendarModal = () => {\n  const dispatch = useDispatch();\n  const {modalOpen} = useSelector(state => state.ui);\n  const {activeEvent} = useSelector(state => state.calendar);\n  const [startDate, setStartDate] = useState(now.toDate());\n  const [endDate, setEndDate] = useState(later.toDate());\n  const [isValidTitle, setIsValidTitle] = useState(true);\n  const [formValues, setFormValues] = useState(initialEvent);\n  const {title, notes, start, end} = formValues;\n\n  useEffect(() => {\n    if (activeEvent) {\n      setFormValues(activeEvent);\n    }\n    else {\n      setFormValues(initialEvent);\n    }\n  }, [activeEvent, setFormValues, initialEvent]);\n\n  const closeModal = () => {\n    dispatch(uiCloseModal());\n    dispatch(eventClearActive());\n    setFormValues(initialEvent);\n  }\n\n  const handleInputChange = ({target}) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  };\n\n  const handleStartDateChange = (e) => {\n    setStartDate(e);\n    setFormValues({\n      ...formValues,\n      start: e\n    });\n  }\n\n  const handleEndDateChange = (e) => {\n    setEndDate(e);\n    setFormValues({\n      ...formValues,\n      end: e\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isValidForm()) {\n      if (activeEvent) {\n        dispatch(eventStartUpdate(formValues))\n      }\n      else {\n        dispatch(eventStartAddNew(formValues));\n      }\n    }\n  };\n\n  const isValidForm = () => {\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n    if (momentStart.isSameOrAfter(momentEnd)) {\n      Swal.fire('Error', 'End date must be greater than start date', 'error');\n      return false;\n    }\n    if (title.trim().length < 2) {\n      setIsValidTitle(false);\n      return false;\n    }\n    setIsValidTitle(true);\n    closeModal();\n    return true;\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      style={customStyles}\n      closeTimeoutMS={200}\n      className=\"modal\"\n      overlayClassName=\"modal-background\"\n    >\n      <h1>\n        {(activeEvent) ? 'Edit event' : 'New event'}\n      </h1>\n      <hr />\n      <form className=\"container\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Start date and time</label>\n          <DateTimePicket\n            className=\"form-control\"\n            onChange={handleStartDateChange}\n            value={startDate}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>End date and time</label>\n          <DateTimePicket\n            className=\"form-control\"\n            onChange={handleEndDateChange}\n            value={endDate}\n            minDate={startDate}\n          />\n        </div>\n        <hr />\n        <div className=\"form-group\">\n          <label>Title and notes</label>\n          <input \n            type=\"text\" \n            className={`form-control ${!isValidTitle && 'is-invalid'}`}\n            placeholder=\"Event title\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">A short description</small>\n        </div>\n        <div className=\"form-group\">\n          <textarea \n            type=\"text\" \n            className=\"form-control\"\n            placeholder=\"Notes\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Additional information</small>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Save</span>\n        </button>\n      </form>\n    </Modal>\n  );\n};\n\nexport default CalendarModal;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nconst AddNewFAB = () => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(uiOpenModal());\n  }\n\n  return (\n    <button\n      className=\"btn btn-primary fab\"\n      onClick={handleClick}\n    >\n      <i className=\"fas fa-plus\"></i>\n    </button>\n  );\n};\n\nexport default AddNewFAB;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nconst DeleteEventFAB = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(eventStartDelete());\n  }\n\n  return (\n    <button\n      className=\"btn btn-danger fab-danger\"\n      onClick={handleDelete}\n    >\n      <i className=\"fas fa-trash\"></i>\n      <span> Delete event</span>\n    </button>\n  );\n};\n\nexport default DeleteEventFAB;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport Navbar from '../ui/Navbar';\nimport CalendarEvent from './CalendarEvent';\nimport CalendarModal from './CalendarModal';\nimport AddNewFAB from '../ui/AddNewFAB';\nimport DeleteEventFAB from '../ui/DeleteEventFAB';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActive, eventSetActive, eventStartLoadAll } from '../../actions/events';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst localizer = momentLocalizer(moment);\n\nconst CalendarScreen = () => {\n  const dispatch = useDispatch();\n  const {events, activeEvent} = useSelector(state => state.calendar);\n  const {uid} = useSelector(state => state.auth);\n  const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n  useEffect(() => {\n    dispatch(eventStartLoadAll());\n  }, [dispatch]);\n\n  const onDoubleClickEvent = (e) => {\n    dispatch(uiOpenModal());\n  };\n\n  const onSelectEvent = (e) => {\n    dispatch(eventSetActive(e));\n  };\n\n  const onSelectSlot = (e) => {\n    dispatch(eventClearActive());\n  };\n\n  const onView = (e) => {\n    setLastView(e)\n    localStorage.setItem('lastView', e);\n  };\n\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    const style = {\n      backgroundColor: (uid === event.user._id) ? '#367cf7' : '#465660',\n      borderRadius: '0',\n      opacity: 0.8,\n      display: 'block',\n      color: '#fff'\n    };\n    return {style};\n  };\n\n  return (\n    <div className=\"calendar-screen\">\n      <Navbar />\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        eventPropGetter={eventStyleGetter}\n        components={{\n          event: CalendarEvent\n        }}\n        onDoubleClickEvent={onDoubleClickEvent}\n        onSelectEvent={onSelectEvent}\n        onView={onView}\n        onSelectSlot={onSelectSlot}\n        selectable={true}\n        view={lastView}\n      />\n      <AddNewFAB />\n      {activeEvent && <DeleteEventFAB />}\n      <CalendarModal />\n    </div>\n  );\n};\n\nexport default CalendarScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Redirect} from 'react-router-dom';\n\nconst PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        (!isAuthenticated)\n          ? (<Component {...props} />)\n          : (<Redirect to=\"/\" />)\n      )}\n    />\n  );\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\nexport default PublicRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Redirect} from 'react-router-dom';\n\nconst PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) => (\n        (isAuthenticated)\n          ? (<Component {...props} />)\n          : (<Redirect to=\"/login\" />)\n      )}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\nexport default PrivateRoute;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport LoginScreen from '../components/auth/LoginScreen';\nimport CalendarScreen from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport PublicRoute from './PublicRoute';\nimport PrivateRoute from './PrivateRoute';\n\nconst AppRouter = () => {\n  const dispatch = useDispatch();\n  const {checking, uid} = useSelector(state => state.auth);\n\n  useEffect(() => {\n    dispatch(startChecking());\n  }, [dispatch]);\n\n  if (checking) {\n    return (\n      <h5>Loading...</h5>\n    );\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            exact\n            path=\"/login\"\n            component={LoginScreen}\n            isAuthenticated={!!uid}\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={CalendarScreen}\n            isAuthenticated={!!uid}\n          />\n          <Redirect to=\"/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport AppRouter from './routers/AppRouter';\n\nconst CalendarApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n\nexport default CalendarApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles/styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}